From 8a0184f186bbaab67c7f8b8fe3aa4c1211de1a56 Mon Sep 17 00:00:00 2001
From: mattcoder2017 <myang@arris.com>
Date: Mon, 8 Oct 2018 20:26:11 +0800
Subject: [PATCH 1/3] My submission
XOV:v4Added code quality tasks

---
 Readme.txt => XOProject.Tests/Readme1.txt | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename Readme.txt => XOProject.Tests/Readme1.txt (100%)

diff --git a/Readme.txt b/XOProject.Tests/Readme1.txt
similarity index 100%
rename from Readme.txt
rename to XOProject.Tests/Readme1.txt
-- 
2.17.1.windows.2


From 73e6e128c3ee1021a4675cdc7800bf97a917e9d2 Mon Sep 17 00:00:00 2001
From: mattcoder2017 <myang@arris.com>
Date: Wed, 10 Oct 2018 20:57:58 +0800
Subject: [PATCH 2/3] Completed code
XOV:v4Added code quality tasks

---
 .../Extensions/AsyncActionWrapper.cs          |  103 +
 XOProject.Tests/Extensions/DbSetExtension.cs  |   30 +
 XOProject.Tests/PortfolioConstrollerTests.cs  |   58 +
 XOProject.Tests/ShareControllerTests.cs       |   88 +-
 XOProject.Tests/TradeControllerTests.cs       |  100 +
 XOProject/Controller/ShareController.cs       |   10 +-
 XOProject/Controller/TradeController.cs       |   35 +-
 XOProject/Model/TradeAnalysis.cs              |    7 +
 XOProject/Repository/GenericRepository.cs     |    2 +-
 coverage-hits.txt                             |  631 +++++
 coverage.json                                 | 2062 +++++++++++++++++
 modify.patch                                  |    0
 12 files changed, 3118 insertions(+), 8 deletions(-)
 create mode 100644 XOProject.Tests/Extensions/AsyncActionWrapper.cs
 create mode 100644 XOProject.Tests/Extensions/DbSetExtension.cs
 create mode 100644 XOProject.Tests/PortfolioConstrollerTests.cs
 create mode 100644 XOProject.Tests/TradeControllerTests.cs
 create mode 100644 coverage-hits.txt
 create mode 100644 coverage.json
 create mode 100644 modify.patch

diff --git a/XOProject.Tests/Extensions/AsyncActionWrapper.cs b/XOProject.Tests/Extensions/AsyncActionWrapper.cs
new file mode 100644
index 0000000..8d2c669
--- /dev/null
+++ b/XOProject.Tests/Extensions/AsyncActionWrapper.cs
@@ -0,0 +1,103 @@
+﻿using Microsoft.EntityFrameworkCore.Query.Internal;
+using System.Collections.Generic;
+using System.Linq;
+using System.Linq.Expressions;
+using System.Threading;
+using System.Threading.Tasks;
+
+namespace XOProject.Tests
+{
+    /// <summary>
+    /// The type is to mock IAsyncQueryProvider which is rquired in IQuerable async methods
+    /// </summary>
+    /// <typeparam name="TEntity"></typeparam>
+    internal class TestUseAsyncQueryProvider<TEntity> : IAsyncQueryProvider
+    {
+        private readonly IQueryProvider _inner;
+
+        internal TestUseAsyncQueryProvider(IQueryProvider inner)
+        {
+            _inner = inner;
+        }
+
+        public IQueryable CreateQuery(Expression expression)
+        {
+            return new TestUseAsyncEnumerable<TEntity>(expression);
+        }
+
+        public IQueryable<TElement> CreateQuery<TElement>(Expression expression)
+        {
+            return new TestUseAsyncEnumerable<TElement>(expression);
+        }
+
+        public object Execute(Expression expression)
+        {
+            return _inner.Execute(expression);
+        }
+
+        public TResult Execute<TResult>(Expression expression)
+        {
+            return _inner.Execute<TResult>(expression);
+        }
+
+        public IAsyncEnumerable<TResult> ExecuteAsync<TResult>(Expression expression)
+        {
+            return new TestUseAsyncEnumerable<TResult>(expression);
+        }
+
+        public Task<TResult> ExecuteAsync<TResult>(Expression expression, CancellationToken cancellationToken)
+        {
+            return Task.FromResult(Execute<TResult>(expression));
+        }
+    }
+
+    internal class TestUseAsyncEnumerable<T> : EnumerableQuery<T>, IAsyncEnumerable<T>, IQueryable<T>
+    {
+        public TestUseAsyncEnumerable(IEnumerable<T> enumerable)
+            : base(enumerable)
+        { }
+
+        public TestUseAsyncEnumerable(Expression expression)
+            : base(expression)
+        { }
+
+        public IAsyncEnumerator<T> GetEnumerator()
+        {
+            return new TestUseAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
+        }
+
+        IQueryProvider IQueryable.Provider
+        {
+            get { return new TestUseAsyncQueryProvider<T>(this); }
+        }
+    }
+
+    internal class TestUseAsyncEnumerator<T> : IAsyncEnumerator<T>
+    {
+        private readonly IEnumerator<T> _inner;
+
+        public TestUseAsyncEnumerator(IEnumerator<T> inner)
+        {
+            _inner = inner;
+        }
+
+        public void Dispose()
+        {
+            _inner.Dispose();
+        }
+
+        public T Current
+        {
+            get
+            {
+                return _inner.Current;
+            }
+        }
+
+        public Task<bool> MoveNext(CancellationToken cancellationToken)
+        {
+            return Task.FromResult(_inner.MoveNext());
+        }
+    }
+
+}
diff --git a/XOProject.Tests/Extensions/DbSetExtension.cs b/XOProject.Tests/Extensions/DbSetExtension.cs
new file mode 100644
index 0000000..ae5d1e0
--- /dev/null
+++ b/XOProject.Tests/Extensions/DbSetExtension.cs
@@ -0,0 +1,30 @@
+﻿using Microsoft.EntityFrameworkCore;
+using Moq;
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+
+namespace XOProject.Tests
+{
+   internal static class DbSetExtension
+    {
+        public static void MockDbSet<T>(this Mock<DbSet<T>> mockSet, IEnumerable<T> source) where T:class
+        {
+            var list = source.AsQueryable();
+            mockSet.As<IAsyncEnumerable<T>>()
+            .Setup(m => m.GetEnumerator())
+            .Returns(new TestUseAsyncEnumerator<T>(list.GetEnumerator()));
+
+            mockSet.As<IQueryable<T>>()
+            .Setup(m => m.Provider)
+            .Returns(new TestUseAsyncQueryProvider<T>(list.Provider));
+
+            mockSet.As<IQueryable<T>>().Setup(m => m.Expression).Returns(list.Expression);
+            mockSet.As<IQueryable<T>>().Setup(m => m.ElementType).Returns(list.ElementType);
+            mockSet.As<IQueryable<T>>().Setup(m => m.GetEnumerator()).Returns(list.GetEnumerator());
+        }
+    }
+
+
+}
diff --git a/XOProject.Tests/PortfolioConstrollerTests.cs b/XOProject.Tests/PortfolioConstrollerTests.cs
new file mode 100644
index 0000000..44b81cb
--- /dev/null
+++ b/XOProject.Tests/PortfolioConstrollerTests.cs
@@ -0,0 +1,58 @@
+﻿using System.Threading.Tasks;
+using XOProject.Controller;
+using Microsoft.AspNetCore.Mvc;
+using NUnit.Framework;
+using Moq;
+using System.Collections.Generic;
+using System.Linq;
+
+namespace XOProject.Tests
+{
+    public class PortfolioControllerTests
+    {
+        private readonly Mock<IPortfolioRepository> _portfolioRepositoryMock = new Mock<IPortfolioRepository>();
+
+        private readonly PortfolioController _portfolioController;
+
+        public PortfolioControllerTests()
+        {
+            _portfolioController = new PortfolioController(null, null, _portfolioRepositoryMock.Object);
+        }
+
+        [Test]
+        public async Task GetPortfolioInfo_ReturnOK()
+        {
+            // Arrange
+            _portfolioRepositoryMock.Setup(i => i.GetAll()).Returns
+                (new Portfolio[1] { new Portfolio { Id = 1 } }.AsQueryable());
+
+            // Act
+            var result = _portfolioController.GetPortfolioInfo(1).GetAwaiter().GetResult() as OkObjectResult;
+
+            // Assert
+            Assert.AreEqual(200, result.StatusCode);
+            var resultSet = result.Value as IQueryable<Portfolio>;
+           Assert.AreEqual(1, resultSet.Count());
+
+        }
+
+        [Test]
+        public async Task Post_Portfolio_ReturnCreated()
+        {
+            // Arrange
+               // Seeding the test entity that missing required value
+            var portfolio = new Portfolio { Id = 1, Name = "test", Trade = new List<Trade>() };
+           
+            // Act
+            var result = _portfolioController.Post(portfolio).GetAwaiter().GetResult() as CreatedResult;
+
+            // Assert
+            Assert.AreEqual(201, result.StatusCode);
+           
+            
+
+        }
+
+
+    }
+}
diff --git a/XOProject.Tests/ShareControllerTests.cs b/XOProject.Tests/ShareControllerTests.cs
index cfcfac2..71ac167 100644
--- a/XOProject.Tests/ShareControllerTests.cs
+++ b/XOProject.Tests/ShareControllerTests.cs
@@ -4,15 +4,16 @@ using XOProject.Controller;
 using Microsoft.AspNetCore.Mvc;
 using NUnit.Framework;
 using Moq;
+using System.Collections.Generic;
+using Microsoft.EntityFrameworkCore;
 
 namespace XOProject.Tests
 {
     public class ShareControllerTests
     {
         private readonly Mock<IShareRepository> _shareRepositoryMock = new Mock<IShareRepository>();
-
         private readonly ShareController _shareController;
-
+      
         public ShareControllerTests()
         {
             _shareController = new ShareController(_shareRepositoryMock.Object);
@@ -40,6 +41,87 @@ namespace XOProject.Tests
             Assert.NotNull(createdResult);
             Assert.AreEqual(201, createdResult.StatusCode);
         }
-        
+
+        [Test]
+        public async Task GetLatestPrice_ShouldReturnMostRecentPrice()
+        {
+            // Arrange
+            var hourRates = new List<HourlyShareRate>() {
+                 new HourlyShareRate {
+                    Symbol = "CBI",
+                    Rate = 330.0M,
+                    TimeStamp = new DateTime(2019, 08, 17, 5, 0, 0)
+                  },
+                  new HourlyShareRate {
+                    Symbol = "CBI",
+                    Rate = 530.0M,
+                    TimeStamp = new DateTime(2020, 08, 17, 5, 0, 0)
+                  },
+                  new HourlyShareRate {
+                    Symbol = "CBI",
+                    Rate = 430.0M,
+                    TimeStamp = new DateTime(2018, 08, 17, 5, 0, 0)
+                 }
+            };
+            var mockSet = new Mock<DbSet<HourlyShareRate>>();
+            mockSet.MockDbSet<HourlyShareRate>(hourRates);
+
+            var mockContext = new Mock<ExchangeContext>();
+            var mockRepository = new Mock<ShareRepository>(mockContext.Object);
+            var shareController = new ShareController(mockRepository.Object);
+
+            mockContext.Setup(i => i.Set<HourlyShareRate>()).Returns(mockSet.Object);
+     
+            // Act
+            var result = shareController.GetLatestPrice("CBI").GetAwaiter().GetResult() as OkObjectResult;
+
+            // Assert
+            Assert.NotNull(result);
+            Assert.AreEqual(200, result.StatusCode);
+            Assert.AreEqual(530.0M, (decimal)result.Value);
+
+        }
+
+        [Test]
+        public async Task UpdateLatestPrice_ShouldUpdateMostRecentPrice()
+        {
+            // Arrange
+            var hourRates = new List<HourlyShareRate>() {
+                 new HourlyShareRate {
+                    Symbol = "CBI",
+                    Rate = 330.0M,
+                    TimeStamp = new DateTime(2019, 08, 17, 5, 0, 0)
+                  },
+                  new HourlyShareRate {
+                    Symbol = "CBI",
+                    Rate = 130.0M,
+                    TimeStamp = new DateTime(2020, 08, 17, 5, 0, 0)
+                  },
+                  new HourlyShareRate {
+                    Symbol = "CBI",
+                    Rate = 430.0M,
+                    TimeStamp = new DateTime(2018, 08, 17, 5, 0, 0)
+                 }
+            };
+            var mockSet = new Mock<DbSet<HourlyShareRate>>();
+            mockSet.MockDbSet<HourlyShareRate>(hourRates);
+
+            HourlyShareRate share = null;
+            var mockContext = new Mock<ExchangeContext>();
+            var mockRepository = new Mock<ShareRepository>(mockContext.Object);
+            var shareController = new ShareController(mockRepository.Object);
+
+            mockContext.Setup(i => i.Set<HourlyShareRate>()).Returns(mockSet.Object);
+            mockRepository.Setup(i => i.UpdateAsync(It.IsAny<HourlyShareRate>())).Returns(Task.FromResult<object>(null)).Callback<HourlyShareRate>((p) => { share = p; });
+            // Act
+
+            shareController.UpdateLastPrice("CBI");
+           
+            // Assert
+            Assert.AreEqual(new DateTime(2020, 08, 17, 5, 0, 0), share.TimeStamp);
+            Assert.AreEqual(10.0M, share.Rate);
+
+        }
     }
 }
+    
\ No newline at end of file
diff --git a/XOProject.Tests/TradeControllerTests.cs b/XOProject.Tests/TradeControllerTests.cs
new file mode 100644
index 0000000..df3107a
--- /dev/null
+++ b/XOProject.Tests/TradeControllerTests.cs
@@ -0,0 +1,100 @@
+﻿using System.Threading.Tasks;
+using XOProject.Controller;
+using Microsoft.AspNetCore.Mvc;
+using NUnit.Framework;
+using Moq;
+using System.Collections.Generic;
+using System.Linq;
+
+namespace XOProject.Tests
+{
+    public class TradeControllerTests
+    {
+        private readonly Mock<ITradeRepository> _tradeRepositoryMock = new Mock<ITradeRepository>();
+
+        private readonly TradeController _tradeController;
+
+        public TradeControllerTests()
+        {
+            _tradeController = new TradeController(null, _tradeRepositoryMock.Object, null);
+        }
+
+        [Test]
+        public async Task GetAnalysis_ShouldReturnCalulatedData()
+        {
+            // Arrange
+                    // Seeding the test data with both BUY and SELL data presents
+           var returnTrade = new Trade [10]
+            {
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 10, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 20, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 30, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 40, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 50, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_SELL, NoOfShares = 100, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_SELL, NoOfShares = 200, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_SELL, NoOfShares = 300, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_SELL, NoOfShares = 400, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_SELL, NoOfShares = 500, PortfolioId = 1, Price = 10, Symbol = "CBI" }
+
+            };
+            _tradeRepositoryMock.Setup(i => i.Query()).Returns(returnTrade.AsQueryable());
+            // Act
+            var result =  _tradeController.GetAnalysis("CBI").GetAwaiter().GetResult() as OkObjectResult;
+            var list = result.Value as List<TradeAnalysis>;
+
+            // Assert
+            Assert.NotNull(list);
+            Assert.AreEqual(2, list.Count);       // return 2 rows each with different group
+            Assert.AreEqual(50, list[0].Maximum);  // Acquire the BUYs to verify calculated data  
+            Assert.AreEqual(10, list[0].Minimum);
+            Assert.AreEqual(30, list[0].Average);
+            Assert.AreEqual(150, list[0].Sum);
+        }
+
+        [Test]
+        public async Task GetAnalysis_NoSellData_ShouldReturnOnly1RowForBuyData()
+        {
+            //Arrange
+                 // Seeding the test data with only BUY data presents
+            var returnTrade1 = new Trade[5]
+             {
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 10, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 20, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 30, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 40, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 50, PortfolioId = 1, Price = 10, Symbol = "CBI" }
+            
+             };
+            _tradeRepositoryMock.Setup(i => i.Query()).Returns(returnTrade1.AsQueryable());
+            //Act
+            var result = _tradeController.GetAnalysis("CBI").GetAwaiter().GetResult() as OkObjectResult;
+            var list = result.Value as List<TradeAnalysis>;
+            //Assert
+            Assert.NotNull(list);
+            Assert.AreEqual(1, list.Count);       // return 1 row each with different group
+        }
+
+        [Test]
+        public async Task GetAnalysis_NoMatchingData_ShouldReturnNotFound()
+        {
+            //Arrange
+                 // Seeding the test data with only BUY data presents
+            var returnTrade1 = new Trade[5]
+             {
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 10, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 20, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 30, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 40, PortfolioId = 1, Price = 10, Symbol = "CBI" },
+               new Trade { Id = 0, Action = TradeAnalysis.ACTION_BUY, NoOfShares = 50, PortfolioId = 1, Price = 10, Symbol = "CBI" }
+            
+             };
+            _tradeRepositoryMock.Setup(i => i.Query()).Returns(returnTrade1.AsQueryable());
+            //Act
+            var result = _tradeController.GetAnalysis("REL").GetAwaiter().GetResult() as NotFoundResult;
+           //Assert
+            Assert.AreEqual(404, result.StatusCode);
+           
+        }
+    }
+}
diff --git a/XOProject/Controller/ShareController.cs b/XOProject/Controller/ShareController.cs
index 46797a4..28bb448 100644
--- a/XOProject/Controller/ShareController.cs
+++ b/XOProject/Controller/ShareController.cs
@@ -19,7 +19,9 @@ namespace XOProject.Controller
         [HttpPut("{symbol}")]
         public async void UpdateLastPrice([FromRoute]string symbol)
         {
-            var share = await _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).OrderByDescending(x => x.Rate).FirstOrDefaultAsync();
+            // Comment out the code which is not fetching the last share info
+            // var share = await _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).OrderByDescending(x => x.Rate).FirstOrDefaultAsync();
+            var share = await _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).OrderByDescending(x => x.TimeStamp).FirstOrDefaultAsync();
             share.Rate =+ 10;
             await _shareRepository.UpdateAsync(share);
         }
@@ -40,8 +42,10 @@ namespace XOProject.Controller
 
         [HttpGet("{symbol}/Latest")]
         public async Task<IActionResult> GetLatestPrice([FromRoute]string symbol)
-        {
-            var share = await _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).FirstOrDefaultAsync();
+        {  
+            //Bug fix - comment out the code which not fetching the most recent share quote
+            //var share = await _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).FirstOrDefaultAsync();
+            var share = await _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).OrderByDescending(x=>x.TimeStamp).FirstOrDefaultAsync();
             return Ok(share?.Rate);
         }
 
diff --git a/XOProject/Controller/TradeController.cs b/XOProject/Controller/TradeController.cs
index fe00140..6f14bc7 100644
--- a/XOProject/Controller/TradeController.cs
+++ b/XOProject/Controller/TradeController.cs
@@ -41,9 +41,42 @@ namespace XOProject.Controller
         [HttpGet("Analysis/{symbol}")]
         public async Task<IActionResult> GetAnalysis([FromRoute]string symbol)
         {
+            var trade = _tradeRepository.Query().Where(x => x.Symbol.Equals(symbol));
+            if (trade.Count<Trade>() == 0)
+                return NotFound();
+
+            //Populate Buy and Sell list
+            var tradeBuy = trade.Where(x => x.Action == TradeAnalysis.ACTION_BUY);
+            var tradeSell = trade.Where(x => x.Action == TradeAnalysis.ACTION_SELL);
+
             var list = new List<TradeAnalysis>();
 
-            return Ok(list);
+            //Add to the return list with the calculated group  
+            if (tradeBuy.Count<Trade>() > 0)
+            {
+                list.Add(new TradeAnalysis
+                {
+                    Action = TradeAnalysis.ACTION_BUY,
+                    Maximum = tradeBuy.Max(e => e.NoOfShares),
+                    Minimum = tradeBuy.Min(e => e.NoOfShares),
+                    Average = tradeBuy.Average(e => (decimal)e.NoOfShares),
+                    Sum = tradeBuy.Sum(e => e.NoOfShares)
+                });
+            }
+
+            if (tradeSell.Count<Trade>() > 0)
+            {
+                list.Add(new TradeAnalysis
+            {
+                Action = TradeAnalysis.ACTION_SELL,
+                Maximum = tradeSell.Max(e => e.NoOfShares),
+                Minimum = tradeSell.Min(e => e.NoOfShares),
+                Average = tradeSell.Average(e => (decimal)e.NoOfShares),
+                Sum = tradeSell.Sum(e => e.NoOfShares)
+            });
+                }
+                       
+            return Ok(list); 
         }
 
 
diff --git a/XOProject/Model/TradeAnalysis.cs b/XOProject/Model/TradeAnalysis.cs
index 1ae4d3b..fd1576b 100644
--- a/XOProject/Model/TradeAnalysis.cs
+++ b/XOProject/Model/TradeAnalysis.cs
@@ -7,6 +7,11 @@ namespace XOProject
 {
     public class TradeAnalysis
     {
+        #region Constants
+        public const string ACTION_BUY = "BUY";
+        public const string ACTION_SELL = "SELL";
+        #endregion
+
         public decimal Sum { get; set; }
 
         public decimal Average { get; set; }
@@ -16,5 +21,7 @@ namespace XOProject
         public decimal Minimum { get; set; }
 
         public string Action { get; set; }
+
+        
     }
 }
diff --git a/XOProject/Repository/GenericRepository.cs b/XOProject/Repository/GenericRepository.cs
index 9aa2497..7183307 100644
--- a/XOProject/Repository/GenericRepository.cs
+++ b/XOProject/Repository/GenericRepository.cs
@@ -25,7 +25,7 @@ namespace XOProject
             await _dbContext.SaveChangesAsync();
         }
 
-        public async Task UpdateAsync(T entity)
+        public virtual async Task UpdateAsync(T entity)
         {
             _dbContext.Entry(entity).State = EntityState.Modified;
             await _dbContext.SaveChangesAsync();
diff --git a/coverage-hits.txt b/coverage-hits.txt
new file mode 100644
index 0000000..1d3e3ff
--- /dev/null
+++ b/coverage-hits.txt
@@ -0,0 +1,631 @@
+101
+102
+100
+45
+103
+105
+99
+104
+106
+44
+45
+47
+49
+107
+111
+109
+113
+99
+110
+114
+44
+117
+118
+116
+41
+43
+39
+41
+43
+39
+41
+43
+39
+95
+96
+80
+117
+118
+116
+133
+135
+115
+81
+79
+40
+38
+40
+38
+40
+38
+134
+136
+42
+41
+43
+39
+137
+141
+139
+143
+115
+140
+144
+36
+41
+43
+39
+41
+43
+39
+41
+43
+39
+95
+96
+80
+117
+118
+116
+119
+122
+115
+81
+79
+40
+38
+40
+38
+40
+38
+120
+123
+43
+121
+124
+115
+38
+42
+151
+152
+146
+153
+148
+154
+150
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+159
+170
+147
+160
+171
+52
+52
+52
+52
+52
+161
+172
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+159
+170
+147
+160
+171
+52
+52
+52
+52
+52
+162
+173
+163
+174
+164
+175
+165
+176
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+166
+177
+71
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+67
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+69
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+65
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+63
+167
+178
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+169
+180
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+51
+61
+55
+59
+57
+53
+159
+170
+147
+160
+171
+52
+52
+52
+52
+52
+52
+52
+52
+52
+52
+162
+173
+163
+174
+164
+175
+165
+176
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+166
+177
+71
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+67
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+69
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+65
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+63
+167
+178
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+168
+179
+71
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+67
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+69
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+65
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+52
+60
+54
+63
+169
+180
+66
+68
+64
+62
diff --git a/coverage.json b/coverage.json
new file mode 100644
index 0000000..8c444ed
--- /dev/null
+++ b/coverage.json
@@ -0,0 +1,2062 @@
+{
+  "SourcePath": "D:\\SourceCode\\CrossExchange\\CrossExchange\\",
+  "HitsFile": "D:\\SourceCode\\CrossExchange\\CrossExchange\\coverage-hits.txt",
+  "ExtraAssemblies": [
+    "D:\\SourceCode\\CrossExchange\\CrossExchange\\XOProject.Tests\\bin\\Debug\\netcoreapp2.0\\dotnet-minicover.dll"
+  ],
+  "Assemblies": [
+    {
+      "Name": "XO-Project",
+      "SourceFiles": {
+        "XOProject\\Controller\\PortfolioController.cs": {
+          "Instructions": [
+            {
+              "Id": 99,
+              "StartLine": 10,
+              "EndLine": 10,
+              "StartColumn": 61,
+              "EndColumn": 65,
+              "Class": "XOProject.Controller.PortfolioController",
+              "Method": "get__portfolioRepository",
+              "MethodFullName": "XOProject.IPortfolioRepository XOProject.Controller.PortfolioController::get__portfolioRepository()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 100,
+              "StartLine": 10,
+              "EndLine": 10,
+              "StartColumn": 66,
+              "EndColumn": 70,
+              "Class": "XOProject.Controller.PortfolioController",
+              "Method": "set__portfolioRepository",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController::set__portfolioRepository(XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 101,
+              "StartLine": 12,
+              "EndLine": 12,
+              "StartColumn": 9,
+              "EndColumn": 145,
+              "Class": "XOProject.Controller.PortfolioController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController::.ctor(XOProject.IShareRepository,XOProject.ITradeRepository,XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 102,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 13,
+              "EndColumn": 56,
+              "Class": "XOProject.Controller.PortfolioController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController::.ctor(XOProject.IShareRepository,XOProject.ITradeRepository,XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0008: ldarg "
+            },
+            {
+              "Id": 103,
+              "StartLine": 20,
+              "EndLine": 20,
+              "StartColumn": 13,
+              "EndColumn": 96,
+              "Class": "XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 104,
+              "StartLine": 22,
+              "EndLine": 22,
+              "StartColumn": 13,
+              "EndColumn": 34,
+              "Class": "XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5::MoveNext()",
+              "Instruction": "IL_00b9: ldarg "
+            },
+            {
+              "Id": 105,
+              "StartLine": 20,
+              "EndLine": 20,
+              "StartColumn": 13,
+              "EndColumn": 96,
+              "Class": "XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 106,
+              "StartLine": 22,
+              "EndLine": 22,
+              "StartColumn": 13,
+              "EndColumn": 34,
+              "Class": "XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<GetPortfolioInfo>d__5::MoveNext()",
+              "Instruction": "IL_00b9: ldarg "
+            },
+            {
+              "Id": 107,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 13,
+              "EndColumn": 37,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_0012: ldarg "
+            },
+            {
+              "Id": 108,
+              "StartLine": 31,
+              "EndLine": 31,
+              "StartColumn": 17,
+              "EndColumn": 47,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_002a: ldarg "
+            },
+            {
+              "Id": 109,
+              "StartLine": 34,
+              "EndLine": 34,
+              "StartColumn": 13,
+              "EndColumn": 59,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_0046: ldarg "
+            },
+            {
+              "Id": 110,
+              "StartLine": 36,
+              "EndLine": 36,
+              "StartColumn": 13,
+              "EndColumn": 60,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_00b7: ldarg "
+            },
+            {
+              "Id": 111,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 13,
+              "EndColumn": 37,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_0012: ldarg "
+            },
+            {
+              "Id": 112,
+              "StartLine": 31,
+              "EndLine": 31,
+              "StartColumn": 17,
+              "EndColumn": 47,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_002a: ldarg "
+            },
+            {
+              "Id": 113,
+              "StartLine": 34,
+              "EndLine": 34,
+              "StartColumn": 13,
+              "EndColumn": 59,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_0046: ldarg "
+            },
+            {
+              "Id": 114,
+              "StartLine": 36,
+              "EndLine": 36,
+              "StartColumn": 13,
+              "EndColumn": 60,
+              "Class": "XOProject.Controller.PortfolioController/<Post>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.PortfolioController/<Post>d__6::MoveNext()",
+              "Instruction": "IL_00b7: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Controller\\ShareController.cs": {
+          "Instructions": [
+            {
+              "Id": 115,
+              "StartLine": 12,
+              "EndLine": 12,
+              "StartColumn": 52,
+              "EndColumn": 56,
+              "Class": "XOProject.Controller.ShareController",
+              "Method": "get__shareRepository",
+              "MethodFullName": "XOProject.IShareRepository XOProject.Controller.ShareController::get__shareRepository()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 116,
+              "StartLine": 12,
+              "EndLine": 12,
+              "StartColumn": 57,
+              "EndColumn": 61,
+              "Class": "XOProject.Controller.ShareController",
+              "Method": "set__shareRepository",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController::set__shareRepository(XOProject.IShareRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 117,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 9,
+              "EndColumn": 65,
+              "Class": "XOProject.Controller.ShareController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController::.ctor(XOProject.IShareRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 118,
+              "StartLine": 16,
+              "EndLine": 16,
+              "StartColumn": 13,
+              "EndColumn": 48,
+              "Class": "XOProject.Controller.ShareController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController::.ctor(XOProject.IShareRepository)",
+              "Instruction": "IL_0008: ldarg "
+            },
+            {
+              "Id": 119,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 13,
+              "EndColumn": 150,
+              "Class": "XOProject.Controller.ShareController/<UpdateLastPrice>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<UpdateLastPrice>d__5::MoveNext()",
+              "Instruction": "IL_0039: ldarg "
+            },
+            {
+              "Id": 120,
+              "StartLine": 25,
+              "EndLine": 25,
+              "StartColumn": 13,
+              "EndColumn": 30,
+              "Class": "XOProject.Controller.ShareController/<UpdateLastPrice>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<UpdateLastPrice>d__5::MoveNext()",
+              "Instruction": "IL_0187: ldarg "
+            },
+            {
+              "Id": 121,
+              "StartLine": 26,
+              "EndLine": 26,
+              "StartColumn": 13,
+              "EndColumn": 55,
+              "Class": "XOProject.Controller.ShareController/<UpdateLastPrice>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<UpdateLastPrice>d__5::MoveNext()",
+              "Instruction": "IL_019a: ldarg "
+            },
+            {
+              "Id": 122,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 13,
+              "EndColumn": 150,
+              "Class": "XOProject.Controller.ShareController/<UpdateLastPrice>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<UpdateLastPrice>d__5::MoveNext()",
+              "Instruction": "IL_0039: ldarg "
+            },
+            {
+              "Id": 123,
+              "StartLine": 25,
+              "EndLine": 25,
+              "StartColumn": 13,
+              "EndColumn": 30,
+              "Class": "XOProject.Controller.ShareController/<UpdateLastPrice>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<UpdateLastPrice>d__5::MoveNext()",
+              "Instruction": "IL_0187: ldarg "
+            },
+            {
+              "Id": 124,
+              "StartLine": 26,
+              "EndLine": 26,
+              "StartColumn": 13,
+              "EndColumn": 55,
+              "Class": "XOProject.Controller.ShareController/<UpdateLastPrice>d__5",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<UpdateLastPrice>d__5::MoveNext()",
+              "Instruction": "IL_019a: ldarg "
+            },
+            {
+              "Id": 125,
+              "StartLine": 33,
+              "EndLine": 33,
+              "StartColumn": 13,
+              "EndColumn": 96,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 126,
+              "StartLine": 34,
+              "EndLine": 34,
+              "StartColumn": 13,
+              "EndColumn": 35,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_00be: ldarg "
+            },
+            {
+              "Id": 127,
+              "StartLine": 36,
+              "EndLine": 36,
+              "StartColumn": 17,
+              "EndColumn": 35,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_00d4: ldarg "
+            },
+            {
+              "Id": 128,
+              "StartLine": 39,
+              "EndLine": 39,
+              "StartColumn": 17,
+              "EndColumn": 37,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_00e8: ldarg "
+            },
+            {
+              "Id": 129,
+              "StartLine": 33,
+              "EndLine": 33,
+              "StartColumn": 13,
+              "EndColumn": 96,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 130,
+              "StartLine": 34,
+              "EndLine": 34,
+              "StartColumn": 13,
+              "EndColumn": 35,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_00be: ldarg "
+            },
+            {
+              "Id": 131,
+              "StartLine": 36,
+              "EndLine": 36,
+              "StartColumn": 17,
+              "EndColumn": 35,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_00d4: ldarg "
+            },
+            {
+              "Id": 132,
+              "StartLine": 39,
+              "EndLine": 39,
+              "StartColumn": 17,
+              "EndColumn": 37,
+              "Class": "XOProject.Controller.ShareController/<Get>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Get>d__6::MoveNext()",
+              "Instruction": "IL_00e8: ldarg "
+            },
+            {
+              "Id": 133,
+              "StartLine": 48,
+              "EndLine": 48,
+              "StartColumn": 13,
+              "EndColumn": 148,
+              "Class": "XOProject.Controller.ShareController/<GetLatestPrice>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<GetLatestPrice>d__7::MoveNext()",
+              "Instruction": "IL_002e: ldarg "
+            },
+            {
+              "Id": 134,
+              "StartLine": 49,
+              "EndLine": 49,
+              "StartColumn": 13,
+              "EndColumn": 36,
+              "Class": "XOProject.Controller.ShareController/<GetLatestPrice>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<GetLatestPrice>d__7::MoveNext()",
+              "Instruction": "IL_017d: ldarg "
+            },
+            {
+              "Id": 135,
+              "StartLine": 48,
+              "EndLine": 48,
+              "StartColumn": 13,
+              "EndColumn": 148,
+              "Class": "XOProject.Controller.ShareController/<GetLatestPrice>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<GetLatestPrice>d__7::MoveNext()",
+              "Instruction": "IL_002e: ldarg "
+            },
+            {
+              "Id": 136,
+              "StartLine": 49,
+              "EndLine": 49,
+              "StartColumn": 13,
+              "EndColumn": 36,
+              "Class": "XOProject.Controller.ShareController/<GetLatestPrice>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<GetLatestPrice>d__7::MoveNext()",
+              "Instruction": "IL_017d: ldarg "
+            },
+            {
+              "Id": 137,
+              "StartLine": 55,
+              "EndLine": 55,
+              "StartColumn": 13,
+              "EndColumn": 37,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_0012: ldarg "
+            },
+            {
+              "Id": 138,
+              "StartLine": 57,
+              "EndLine": 57,
+              "StartColumn": 17,
+              "EndColumn": 47,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_002a: ldarg "
+            },
+            {
+              "Id": 139,
+              "StartLine": 60,
+              "EndLine": 60,
+              "StartColumn": 13,
+              "EndColumn": 55,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_0046: ldarg "
+            },
+            {
+              "Id": 140,
+              "StartLine": 62,
+              "EndLine": 62,
+              "StartColumn": 13,
+              "EndColumn": 56,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_00b7: ldarg "
+            },
+            {
+              "Id": 141,
+              "StartLine": 55,
+              "EndLine": 55,
+              "StartColumn": 13,
+              "EndColumn": 37,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_0012: ldarg "
+            },
+            {
+              "Id": 142,
+              "StartLine": 57,
+              "EndLine": 57,
+              "StartColumn": 17,
+              "EndColumn": 47,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_002a: ldarg "
+            },
+            {
+              "Id": 143,
+              "StartLine": 60,
+              "EndLine": 60,
+              "StartColumn": 13,
+              "EndColumn": 55,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_0046: ldarg "
+            },
+            {
+              "Id": 144,
+              "StartLine": 62,
+              "EndLine": 62,
+              "StartColumn": 13,
+              "EndColumn": 56,
+              "Class": "XOProject.Controller.ShareController/<Post>d__8",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.ShareController/<Post>d__8::MoveNext()",
+              "Instruction": "IL_00b7: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Controller\\TradeController.cs": {
+          "Instructions": [
+            {
+              "Id": 145,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 53,
+              "EndColumn": 57,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": "get__shareRepository",
+              "MethodFullName": "XOProject.IShareRepository XOProject.Controller.TradeController::get__shareRepository()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 146,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 58,
+              "EndColumn": 62,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": "set__shareRepository",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::set__shareRepository(XOProject.IShareRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 147,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 53,
+              "EndColumn": 57,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": "get__tradeRepository",
+              "MethodFullName": "XOProject.ITradeRepository XOProject.Controller.TradeController::get__tradeRepository()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 148,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 58,
+              "EndColumn": 62,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": "set__tradeRepository",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::set__tradeRepository(XOProject.ITradeRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 149,
+              "StartLine": 16,
+              "EndLine": 16,
+              "StartColumn": 61,
+              "EndColumn": 65,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": "get__portfolioRepository",
+              "MethodFullName": "XOProject.IPortfolioRepository XOProject.Controller.TradeController::get__portfolioRepository()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 150,
+              "StartLine": 16,
+              "EndLine": 16,
+              "StartColumn": 66,
+              "EndColumn": 70,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": "set__portfolioRepository",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::set__portfolioRepository(XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 151,
+              "StartLine": 18,
+              "EndLine": 18,
+              "StartColumn": 9,
+              "EndColumn": 141,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::.ctor(XOProject.IShareRepository,XOProject.ITradeRepository,XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 152,
+              "StartLine": 20,
+              "EndLine": 20,
+              "StartColumn": 13,
+              "EndColumn": 48,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::.ctor(XOProject.IShareRepository,XOProject.ITradeRepository,XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0008: ldarg "
+            },
+            {
+              "Id": 153,
+              "StartLine": 21,
+              "EndLine": 21,
+              "StartColumn": 13,
+              "EndColumn": 48,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::.ctor(XOProject.IShareRepository,XOProject.ITradeRepository,XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0010: ldarg "
+            },
+            {
+              "Id": 154,
+              "StartLine": 22,
+              "EndLine": 22,
+              "StartColumn": 13,
+              "EndColumn": 56,
+              "Class": "XOProject.Controller.TradeController",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController::.ctor(XOProject.IShareRepository,XOProject.ITradeRepository,XOProject.IPortfolioRepository)",
+              "Instruction": "IL_0018: ldarg "
+            },
+            {
+              "Id": 155,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 13,
+              "EndColumn": 96,
+              "Class": "XOProject.Controller.TradeController/<GetAllTradings>d__13",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAllTradings>d__13::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 156,
+              "StartLine": 30,
+              "EndLine": 30,
+              "StartColumn": 13,
+              "EndColumn": 30,
+              "Class": "XOProject.Controller.TradeController/<GetAllTradings>d__13",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAllTradings>d__13::MoveNext()",
+              "Instruction": "IL_00b9: ldarg "
+            },
+            {
+              "Id": 157,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 13,
+              "EndColumn": 96,
+              "Class": "XOProject.Controller.TradeController/<GetAllTradings>d__13",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAllTradings>d__13::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 158,
+              "StartLine": 30,
+              "EndLine": 30,
+              "StartColumn": 13,
+              "EndColumn": 30,
+              "Class": "XOProject.Controller.TradeController/<GetAllTradings>d__13",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAllTradings>d__13::MoveNext()",
+              "Instruction": "IL_00b9: ldarg "
+            },
+            {
+              "Id": 159,
+              "StartLine": 44,
+              "EndLine": 44,
+              "StartColumn": 13,
+              "EndColumn": 86,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 160,
+              "StartLine": 45,
+              "EndLine": 45,
+              "StartColumn": 13,
+              "EndColumn": 43,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_00b9: ldarg "
+            },
+            {
+              "Id": 161,
+              "StartLine": 46,
+              "EndLine": 46,
+              "StartColumn": 17,
+              "EndColumn": 35,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_00cb: ldarg "
+            },
+            {
+              "Id": 162,
+              "StartLine": 49,
+              "EndLine": 49,
+              "StartColumn": 13,
+              "EndColumn": 83,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_00dc: ldarg "
+            },
+            {
+              "Id": 163,
+              "StartLine": 50,
+              "EndLine": 50,
+              "StartColumn": 13,
+              "EndColumn": 85,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_013f: ldarg "
+            },
+            {
+              "Id": 164,
+              "StartLine": 52,
+              "EndLine": 52,
+              "StartColumn": 13,
+              "EndColumn": 50,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_01a2: ldarg "
+            },
+            {
+              "Id": 165,
+              "StartLine": 55,
+              "EndLine": 55,
+              "StartColumn": 13,
+              "EndColumn": 45,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_01ad: ldarg "
+            },
+            {
+              "Id": 166,
+              "StartLine": 57,
+              "EndLine": 64,
+              "StartColumn": 17,
+              "EndColumn": 20,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_01c5: ldarg "
+            },
+            {
+              "Id": 167,
+              "StartLine": 67,
+              "EndLine": 67,
+              "StartColumn": 13,
+              "EndColumn": 46,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_0345: ldarg "
+            },
+            {
+              "Id": 168,
+              "StartLine": 69,
+              "EndLine": 76,
+              "StartColumn": 17,
+              "EndColumn": 16,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_035d: ldarg "
+            },
+            {
+              "Id": 169,
+              "StartLine": 79,
+              "EndLine": 79,
+              "StartColumn": 13,
+              "EndColumn": 29,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_04dd: ldarg "
+            },
+            {
+              "Id": 170,
+              "StartLine": 44,
+              "EndLine": 44,
+              "StartColumn": 13,
+              "EndColumn": 86,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_0024: ldarg "
+            },
+            {
+              "Id": 171,
+              "StartLine": 45,
+              "EndLine": 45,
+              "StartColumn": 13,
+              "EndColumn": 43,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_00b9: ldarg "
+            },
+            {
+              "Id": 172,
+              "StartLine": 46,
+              "EndLine": 46,
+              "StartColumn": 17,
+              "EndColumn": 35,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_00cb: ldarg "
+            },
+            {
+              "Id": 173,
+              "StartLine": 49,
+              "EndLine": 49,
+              "StartColumn": 13,
+              "EndColumn": 83,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_00dc: ldarg "
+            },
+            {
+              "Id": 174,
+              "StartLine": 50,
+              "EndLine": 50,
+              "StartColumn": 13,
+              "EndColumn": 85,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_013f: ldarg "
+            },
+            {
+              "Id": 175,
+              "StartLine": 52,
+              "EndLine": 52,
+              "StartColumn": 13,
+              "EndColumn": 50,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_01a2: ldarg "
+            },
+            {
+              "Id": 176,
+              "StartLine": 55,
+              "EndLine": 55,
+              "StartColumn": 13,
+              "EndColumn": 45,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_01ad: ldarg "
+            },
+            {
+              "Id": 177,
+              "StartLine": 57,
+              "EndLine": 64,
+              "StartColumn": 17,
+              "EndColumn": 20,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_01c5: ldarg "
+            },
+            {
+              "Id": 178,
+              "StartLine": 67,
+              "EndLine": 67,
+              "StartColumn": 13,
+              "EndColumn": 46,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_0345: ldarg "
+            },
+            {
+              "Id": 179,
+              "StartLine": 69,
+              "EndLine": 76,
+              "StartColumn": 17,
+              "EndColumn": 16,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_035d: ldarg "
+            },
+            {
+              "Id": 180,
+              "StartLine": 79,
+              "EndLine": 79,
+              "StartColumn": 13,
+              "EndColumn": 29,
+              "Class": "XOProject.Controller.TradeController/<GetAnalysis>d__14",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.Controller.TradeController/<GetAnalysis>d__14::MoveNext()",
+              "Instruction": "IL_04dd: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Exceptions\\HttpStatusCodeException.cs": {
+          "Instructions": [
+            {
+              "Id": 1,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 51,
+              "EndColumn": 64,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 2,
+              "StartLine": 8,
+              "EndLine": 8,
+              "StartColumn": 9,
+              "EndColumn": 55,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32)",
+              "Instruction": "IL_000b: ldarg "
+            },
+            {
+              "Id": 3,
+              "StartLine": 10,
+              "EndLine": 10,
+              "StartColumn": 13,
+              "EndColumn": 37,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32)",
+              "Instruction": "IL_0013: ldarg "
+            },
+            {
+              "Id": 4,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 51,
+              "EndColumn": 64,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32,System.String)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 5,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 74,
+              "EndColumn": 87,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32,System.String)",
+              "Instruction": "IL_000b: ldarg "
+            },
+            {
+              "Id": 6,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 13,
+              "EndColumn": 37,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32,System.String)",
+              "Instruction": "IL_0014: ldarg "
+            },
+            {
+              "Id": 7,
+              "StartLine": 18,
+              "EndLine": 18,
+              "StartColumn": 75,
+              "EndColumn": 109,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32,System.Exception)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 8,
+              "StartLine": 22,
+              "EndLine": 22,
+              "StartColumn": 79,
+              "EndColumn": 119,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32,Newtonsoft.Json.Linq.JObject)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 9,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 13,
+              "EndColumn": 47,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::.ctor(System.Int32,Newtonsoft.Json.Linq.JObject)",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 10,
+              "StartLine": 27,
+              "EndLine": 27,
+              "StartColumn": 33,
+              "EndColumn": 37,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": "get_StatusCode",
+              "MethodFullName": "System.Int32 XOProject.HttpStatusCodeException::get_StatusCode()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 11,
+              "StartLine": 27,
+              "EndLine": 27,
+              "StartColumn": 38,
+              "EndColumn": 42,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": "set_StatusCode",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::set_StatusCode(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 12,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": "get_ContentType",
+              "MethodFullName": "System.String XOProject.HttpStatusCodeException::get_ContentType()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 13,
+              "StartLine": 29,
+              "EndLine": 29,
+              "StartColumn": 42,
+              "EndColumn": 46,
+              "Class": "XOProject.HttpStatusCodeException",
+              "Method": "set_ContentType",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeException::set_ContentType(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Exceptions\\HttpStatusCodeExceptionMiddleware.cs": {
+          "Instructions": [
+            {
+              "Id": 14,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 9,
+              "EndColumn": 101,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware::.ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 15,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 13,
+              "EndColumn": 75,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware::.ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory)",
+              "Instruction": "IL_0008: ldarg "
+            },
+            {
+              "Id": 16,
+              "StartLine": 16,
+              "EndLine": 17,
+              "StartColumn": 13,
+              "EndColumn": 78,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware::.ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory)",
+              "Instruction": "IL_001e: ldarg "
+            },
+            {
+              "Id": 17,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 17,
+              "EndColumn": 38,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_002a: ldarg "
+            },
+            {
+              "Id": 18,
+              "StartLine": 26,
+              "EndLine": 26,
+              "StartColumn": 13,
+              "EndColumn": 47,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_009d: stloc V_3"
+            },
+            {
+              "Id": 19,
+              "StartLine": 28,
+              "EndLine": 28,
+              "StartColumn": 17,
+              "EndColumn": 49,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_00d2: ldarg "
+            },
+            {
+              "Id": 20,
+              "StartLine": 30,
+              "EndLine": 31,
+              "StartColumn": 21,
+              "EndColumn": 116,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_00e9: ldarg "
+            },
+            {
+              "Id": 21,
+              "StartLine": 32,
+              "EndLine": 32,
+              "StartColumn": 21,
+              "EndColumn": 27,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_0104: ldarg "
+            },
+            {
+              "Id": 22,
+              "StartLine": 35,
+              "EndLine": 35,
+              "StartColumn": 17,
+              "EndColumn": 42,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_012a: ldarg "
+            },
+            {
+              "Id": 23,
+              "StartLine": 36,
+              "EndLine": 36,
+              "StartColumn": 17,
+              "EndColumn": 61,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_013b: ldarg "
+            },
+            {
+              "Id": 24,
+              "StartLine": 37,
+              "EndLine": 37,
+              "StartColumn": 17,
+              "EndColumn": 63,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_0157: ldarg "
+            },
+            {
+              "Id": 25,
+              "StartLine": 39,
+              "EndLine": 39,
+              "StartColumn": 17,
+              "EndColumn": 63,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_0173: ldarg "
+            },
+            {
+              "Id": 26,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 17,
+              "EndColumn": 38,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_002a: ldarg "
+            },
+            {
+              "Id": 27,
+              "StartLine": 26,
+              "EndLine": 26,
+              "StartColumn": 13,
+              "EndColumn": 47,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_009d: stloc V_3"
+            },
+            {
+              "Id": 28,
+              "StartLine": 28,
+              "EndLine": 28,
+              "StartColumn": 17,
+              "EndColumn": 49,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_00d2: ldarg "
+            },
+            {
+              "Id": 29,
+              "StartLine": 30,
+              "EndLine": 31,
+              "StartColumn": 21,
+              "EndColumn": 116,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_00e9: ldarg "
+            },
+            {
+              "Id": 30,
+              "StartLine": 32,
+              "EndLine": 32,
+              "StartColumn": 21,
+              "EndColumn": 27,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_0104: ldarg "
+            },
+            {
+              "Id": 31,
+              "StartLine": 35,
+              "EndLine": 35,
+              "StartColumn": 17,
+              "EndColumn": 42,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_012a: ldarg "
+            },
+            {
+              "Id": 32,
+              "StartLine": 36,
+              "EndLine": 36,
+              "StartColumn": 17,
+              "EndColumn": 61,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_013b: ldarg "
+            },
+            {
+              "Id": 33,
+              "StartLine": 37,
+              "EndLine": 37,
+              "StartColumn": 17,
+              "EndColumn": 63,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_0157: ldarg "
+            },
+            {
+              "Id": 34,
+              "StartLine": 39,
+              "EndLine": 39,
+              "StartColumn": 17,
+              "EndColumn": 63,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.HttpStatusCodeExceptionMiddleware/<Invoke>d__3::MoveNext()",
+              "Instruction": "IL_0173: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Exceptions\\HttpStatusCodeExceptionMiddlewareExtensions.cs": {
+          "Instructions": [
+            {
+              "Id": 35,
+              "StartLine": 9,
+              "EndLine": 9,
+              "StartColumn": 13,
+              "EndColumn": 79,
+              "Class": "XOProject.HttpStatusCodeExceptionMiddlewareExtensions",
+              "Method": "UseHttpStatusCodeExceptionMiddleware",
+              "MethodFullName": "Microsoft.AspNetCore.Builder.IApplicationBuilder XOProject.HttpStatusCodeExceptionMiddlewareExtensions::UseHttpStatusCodeExceptionMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)",
+              "Instruction": "IL_0001: ldarg builder"
+            }
+          ]
+        },
+        "XOProject\\Model\\HourlyShareRate.cs": {
+          "Instructions": [
+            {
+              "Id": 36,
+              "StartLine": 8,
+              "EndLine": 8,
+              "StartColumn": 25,
+              "EndColumn": 29,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "get_Id",
+              "MethodFullName": "System.Int32 XOProject.HourlyShareRate::get_Id()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 37,
+              "StartLine": 8,
+              "EndLine": 8,
+              "StartColumn": 30,
+              "EndColumn": 34,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "set_Id",
+              "MethodFullName": "System.Void XOProject.HourlyShareRate::set_Id(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 38,
+              "StartLine": 11,
+              "EndLine": 11,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "get_TimeStamp",
+              "MethodFullName": "System.DateTime XOProject.HourlyShareRate::get_TimeStamp()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 39,
+              "StartLine": 11,
+              "EndLine": 11,
+              "StartColumn": 42,
+              "EndColumn": 46,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "set_TimeStamp",
+              "MethodFullName": "System.Void XOProject.HourlyShareRate::set_TimeStamp(System.DateTime)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 40,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 32,
+              "EndColumn": 36,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "get_Symbol",
+              "MethodFullName": "System.String XOProject.HourlyShareRate::get_Symbol()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 41,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "set_Symbol",
+              "MethodFullName": "System.Void XOProject.HourlyShareRate::set_Symbol(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 42,
+              "StartLine": 17,
+              "EndLine": 17,
+              "StartColumn": 31,
+              "EndColumn": 35,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "get_Rate",
+              "MethodFullName": "System.Decimal XOProject.HourlyShareRate::get_Rate()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 43,
+              "StartLine": 17,
+              "EndLine": 17,
+              "StartColumn": 36,
+              "EndColumn": 40,
+              "Class": "XOProject.HourlyShareRate",
+              "Method": "set_Rate",
+              "MethodFullName": "System.Void XOProject.HourlyShareRate::set_Rate(System.Decimal)",
+              "Instruction": "IL_0000: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Model\\Portfolio.cs": {
+          "Instructions": [
+            {
+              "Id": 44,
+              "StartLine": 8,
+              "EndLine": 8,
+              "StartColumn": 25,
+              "EndColumn": 29,
+              "Class": "XOProject.Portfolio",
+              "Method": "get_Id",
+              "MethodFullName": "System.Int32 XOProject.Portfolio::get_Id()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 45,
+              "StartLine": 8,
+              "EndLine": 8,
+              "StartColumn": 30,
+              "EndColumn": 34,
+              "Class": "XOProject.Portfolio",
+              "Method": "set_Id",
+              "MethodFullName": "System.Void XOProject.Portfolio::set_Id(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 46,
+              "StartLine": 11,
+              "EndLine": 11,
+              "StartColumn": 30,
+              "EndColumn": 34,
+              "Class": "XOProject.Portfolio",
+              "Method": "get_Name",
+              "MethodFullName": "System.String XOProject.Portfolio::get_Name()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 47,
+              "StartLine": 11,
+              "EndLine": 11,
+              "StartColumn": 35,
+              "EndColumn": 39,
+              "Class": "XOProject.Portfolio",
+              "Method": "set_Name",
+              "MethodFullName": "System.Void XOProject.Portfolio::set_Name(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 48,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 36,
+              "EndColumn": 40,
+              "Class": "XOProject.Portfolio",
+              "Method": "get_Trade",
+              "MethodFullName": "System.Collections.Generic.List`1<XOProject.Trade> XOProject.Portfolio::get_Trade()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 49,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 41,
+              "EndColumn": 45,
+              "Class": "XOProject.Portfolio",
+              "Method": "set_Trade",
+              "MethodFullName": "System.Void XOProject.Portfolio::set_Trade(System.Collections.Generic.List`1<XOProject.Trade>)",
+              "Instruction": "IL_0000: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Model\\Trade.cs": {
+          "Instructions": [
+            {
+              "Id": 50,
+              "StartLine": 5,
+              "EndLine": 5,
+              "StartColumn": 25,
+              "EndColumn": 29,
+              "Class": "XOProject.Trade",
+              "Method": "get_Id",
+              "MethodFullName": "System.Int32 XOProject.Trade::get_Id()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 51,
+              "StartLine": 5,
+              "EndLine": 5,
+              "StartColumn": 30,
+              "EndColumn": 34,
+              "Class": "XOProject.Trade",
+              "Method": "set_Id",
+              "MethodFullName": "System.Void XOProject.Trade::set_Id(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 52,
+              "StartLine": 7,
+              "EndLine": 7,
+              "StartColumn": 32,
+              "EndColumn": 36,
+              "Class": "XOProject.Trade",
+              "Method": "get_Symbol",
+              "MethodFullName": "System.String XOProject.Trade::get_Symbol()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 53,
+              "StartLine": 7,
+              "EndLine": 7,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.Trade",
+              "Method": "set_Symbol",
+              "MethodFullName": "System.Void XOProject.Trade::set_Symbol(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 54,
+              "StartLine": 9,
+              "EndLine": 9,
+              "StartColumn": 33,
+              "EndColumn": 37,
+              "Class": "XOProject.Trade",
+              "Method": "get_NoOfShares",
+              "MethodFullName": "System.Int32 XOProject.Trade::get_NoOfShares()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 55,
+              "StartLine": 9,
+              "EndLine": 9,
+              "StartColumn": 38,
+              "EndColumn": 42,
+              "Class": "XOProject.Trade",
+              "Method": "set_NoOfShares",
+              "MethodFullName": "System.Void XOProject.Trade::set_NoOfShares(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 56,
+              "StartLine": 11,
+              "EndLine": 11,
+              "StartColumn": 32,
+              "EndColumn": 36,
+              "Class": "XOProject.Trade",
+              "Method": "get_Price",
+              "MethodFullName": "System.Decimal XOProject.Trade::get_Price()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 57,
+              "StartLine": 11,
+              "EndLine": 11,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.Trade",
+              "Method": "set_Price",
+              "MethodFullName": "System.Void XOProject.Trade::set_Price(System.Decimal)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 58,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 34,
+              "EndColumn": 38,
+              "Class": "XOProject.Trade",
+              "Method": "get_PortfolioId",
+              "MethodFullName": "System.Int32 XOProject.Trade::get_PortfolioId()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 59,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 39,
+              "EndColumn": 43,
+              "Class": "XOProject.Trade",
+              "Method": "set_PortfolioId",
+              "MethodFullName": "System.Void XOProject.Trade::set_PortfolioId(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 60,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 32,
+              "EndColumn": 36,
+              "Class": "XOProject.Trade",
+              "Method": "get_Action",
+              "MethodFullName": "System.String XOProject.Trade::get_Action()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 61,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.Trade",
+              "Method": "set_Action",
+              "MethodFullName": "System.Void XOProject.Trade::set_Action(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Model\\TradeAnalysis.cs": {
+          "Instructions": [
+            {
+              "Id": 62,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 30,
+              "EndColumn": 34,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "get_Sum",
+              "MethodFullName": "System.Decimal XOProject.TradeAnalysis::get_Sum()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 63,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 35,
+              "EndColumn": 39,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "set_Sum",
+              "MethodFullName": "System.Void XOProject.TradeAnalysis::set_Sum(System.Decimal)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 64,
+              "StartLine": 17,
+              "EndLine": 17,
+              "StartColumn": 34,
+              "EndColumn": 38,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "get_Average",
+              "MethodFullName": "System.Decimal XOProject.TradeAnalysis::get_Average()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 65,
+              "StartLine": 17,
+              "EndLine": 17,
+              "StartColumn": 39,
+              "EndColumn": 43,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "set_Average",
+              "MethodFullName": "System.Void XOProject.TradeAnalysis::set_Average(System.Decimal)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 66,
+              "StartLine": 19,
+              "EndLine": 19,
+              "StartColumn": 34,
+              "EndColumn": 38,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "get_Maximum",
+              "MethodFullName": "System.Decimal XOProject.TradeAnalysis::get_Maximum()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 67,
+              "StartLine": 19,
+              "EndLine": 19,
+              "StartColumn": 39,
+              "EndColumn": 43,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "set_Maximum",
+              "MethodFullName": "System.Void XOProject.TradeAnalysis::set_Maximum(System.Decimal)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 68,
+              "StartLine": 21,
+              "EndLine": 21,
+              "StartColumn": 34,
+              "EndColumn": 38,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "get_Minimum",
+              "MethodFullName": "System.Decimal XOProject.TradeAnalysis::get_Minimum()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 69,
+              "StartLine": 21,
+              "EndLine": 21,
+              "StartColumn": 39,
+              "EndColumn": 43,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "set_Minimum",
+              "MethodFullName": "System.Void XOProject.TradeAnalysis::set_Minimum(System.Decimal)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 70,
+              "StartLine": 23,
+              "EndLine": 23,
+              "StartColumn": 32,
+              "EndColumn": 36,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "get_Action",
+              "MethodFullName": "System.String XOProject.TradeAnalysis::get_Action()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 71,
+              "StartLine": 23,
+              "EndLine": 23,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.TradeAnalysis",
+              "Method": "set_Action",
+              "MethodFullName": "System.Void XOProject.TradeAnalysis::set_Action(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Model\\TradeModel.cs": {
+          "Instructions": [
+            {
+              "Id": 72,
+              "StartLine": 7,
+              "EndLine": 7,
+              "StartColumn": 9,
+              "EndColumn": 29,
+              "Class": "XOProject.TradeModel",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.TradeModel::.ctor()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 73,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 33,
+              "EndColumn": 37,
+              "Class": "XOProject.TradeModel",
+              "Method": "get_NoOfShares",
+              "MethodFullName": "System.Int32 XOProject.TradeModel::get_NoOfShares()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 74,
+              "StartLine": 13,
+              "EndLine": 13,
+              "StartColumn": 38,
+              "EndColumn": 42,
+              "Class": "XOProject.TradeModel",
+              "Method": "set_NoOfShares",
+              "MethodFullName": "System.Void XOProject.TradeModel::set_NoOfShares(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 75,
+              "StartLine": 16,
+              "EndLine": 16,
+              "StartColumn": 34,
+              "EndColumn": 38,
+              "Class": "XOProject.TradeModel",
+              "Method": "get_PortfolioId",
+              "MethodFullName": "System.Int32 XOProject.TradeModel::get_PortfolioId()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 76,
+              "StartLine": 16,
+              "EndLine": 16,
+              "StartColumn": 39,
+              "EndColumn": 43,
+              "Class": "XOProject.TradeModel",
+              "Method": "set_PortfolioId",
+              "MethodFullName": "System.Void XOProject.TradeModel::set_PortfolioId(System.Int32)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 77,
+              "StartLine": 20,
+              "EndLine": 20,
+              "StartColumn": 32,
+              "EndColumn": 36,
+              "Class": "XOProject.TradeModel",
+              "Method": "get_Action",
+              "MethodFullName": "System.String XOProject.TradeModel::get_Action()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 78,
+              "StartLine": 20,
+              "EndLine": 20,
+              "StartColumn": 37,
+              "EndColumn": 41,
+              "Class": "XOProject.TradeModel",
+              "Method": "set_Action",
+              "MethodFullName": "System.Void XOProject.TradeModel::set_Action(System.String)",
+              "Instruction": "IL_0000: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Repository\\GenericRepository.cs": {
+          "Instructions": [
+            {
+              "Id": 79,
+              "StartLine": 10,
+              "EndLine": 10,
+              "StartColumn": 48,
+              "EndColumn": 52,
+              "Class": "XOProject.GenericRepository`1",
+              "Method": "get__dbContext",
+              "MethodFullName": "XOProject.ExchangeContext XOProject.GenericRepository`1::get__dbContext()",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 80,
+              "StartLine": 10,
+              "EndLine": 10,
+              "StartColumn": 53,
+              "EndColumn": 57,
+              "Class": "XOProject.GenericRepository`1",
+              "Method": "set__dbContext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1::set__dbContext(XOProject.ExchangeContext)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 81,
+              "StartLine": 19,
+              "EndLine": 19,
+              "StartColumn": 13,
+              "EndColumn": 54,
+              "Class": "XOProject.GenericRepository`1",
+              "Method": "Query",
+              "MethodFullName": "System.Linq.IQueryable`1<T> XOProject.GenericRepository`1::Query()",
+              "Instruction": "IL_0001: ldarg "
+            },
+            {
+              "Id": 82,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 13,
+              "EndColumn": 54,
+              "Class": "XOProject.GenericRepository`1/<GetAsync>d__4",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<GetAsync>d__4::MoveNext()",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 83,
+              "StartLine": 14,
+              "EndLine": 14,
+              "StartColumn": 13,
+              "EndColumn": 54,
+              "Class": "XOProject.GenericRepository`1/<GetAsync>d__4",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<GetAsync>d__4::MoveNext()",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 84,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 13,
+              "EndColumn": 45,
+              "Class": "XOProject.GenericRepository`1/<InsertAsync>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<InsertAsync>d__6::MoveNext()",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 85,
+              "StartLine": 25,
+              "EndLine": 25,
+              "StartColumn": 13,
+              "EndColumn": 49,
+              "Class": "XOProject.GenericRepository`1/<InsertAsync>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<InsertAsync>d__6::MoveNext()",
+              "Instruction": "IL_002b: ldarg "
+            },
+            {
+              "Id": 86,
+              "StartLine": 24,
+              "EndLine": 24,
+              "StartColumn": 13,
+              "EndColumn": 45,
+              "Class": "XOProject.GenericRepository`1/<InsertAsync>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<InsertAsync>d__6::MoveNext()",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 87,
+              "StartLine": 25,
+              "EndLine": 25,
+              "StartColumn": 13,
+              "EndColumn": 49,
+              "Class": "XOProject.GenericRepository`1/<InsertAsync>d__6",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<InsertAsync>d__6::MoveNext()",
+              "Instruction": "IL_002b: ldarg "
+            },
+            {
+              "Id": 88,
+              "StartLine": 30,
+              "EndLine": 30,
+              "StartColumn": 13,
+              "EndColumn": 67,
+              "Class": "XOProject.GenericRepository`1/<UpdateAsync>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<UpdateAsync>d__7::MoveNext()",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 89,
+              "StartLine": 31,
+              "EndLine": 31,
+              "StartColumn": 13,
+              "EndColumn": 49,
+              "Class": "XOProject.GenericRepository`1/<UpdateAsync>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<UpdateAsync>d__7::MoveNext()",
+              "Instruction": "IL_002c: ldarg "
+            },
+            {
+              "Id": 90,
+              "StartLine": 30,
+              "EndLine": 30,
+              "StartColumn": 13,
+              "EndColumn": 67,
+              "Class": "XOProject.GenericRepository`1/<UpdateAsync>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<UpdateAsync>d__7::MoveNext()",
+              "Instruction": "IL_000f: ldarg "
+            },
+            {
+              "Id": 91,
+              "StartLine": 31,
+              "EndLine": 31,
+              "StartColumn": 13,
+              "EndColumn": 49,
+              "Class": "XOProject.GenericRepository`1/<UpdateAsync>d__7",
+              "Method": "MoveNext",
+              "MethodFullName": "System.Void XOProject.GenericRepository`1/<UpdateAsync>d__7::MoveNext()",
+              "Instruction": "IL_002c: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Repository\\PortfolioRepository.cs": {
+          "Instructions": [
+            {
+              "Id": 92,
+              "StartLine": 8,
+              "EndLine": 8,
+              "StartColumn": 9,
+              "EndColumn": 62,
+              "Class": "XOProject.PortfolioRepository",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.PortfolioRepository::.ctor(XOProject.ExchangeContext)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 93,
+              "StartLine": 10,
+              "EndLine": 10,
+              "StartColumn": 13,
+              "EndColumn": 36,
+              "Class": "XOProject.PortfolioRepository",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.PortfolioRepository::.ctor(XOProject.ExchangeContext)",
+              "Instruction": "IL_0008: ldarg "
+            },
+            {
+              "Id": 94,
+              "StartLine": 15,
+              "EndLine": 15,
+              "StartColumn": 13,
+              "EndColumn": 78,
+              "Class": "XOProject.PortfolioRepository",
+              "Method": "GetAll",
+              "MethodFullName": "System.Linq.IQueryable`1<XOProject.Portfolio> XOProject.PortfolioRepository::GetAll()",
+              "Instruction": "IL_0001: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Repository\\ShareRepository.cs": {
+          "Instructions": [
+            {
+              "Id": 95,
+              "StartLine": 5,
+              "EndLine": 5,
+              "StartColumn": 9,
+              "EndColumn": 58,
+              "Class": "XOProject.ShareRepository",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.ShareRepository::.ctor(XOProject.ExchangeContext)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 96,
+              "StartLine": 7,
+              "EndLine": 7,
+              "StartColumn": 13,
+              "EndColumn": 36,
+              "Class": "XOProject.ShareRepository",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.ShareRepository::.ctor(XOProject.ExchangeContext)",
+              "Instruction": "IL_0008: ldarg "
+            }
+          ]
+        },
+        "XOProject\\Repository\\TradeRepository.cs": {
+          "Instructions": [
+            {
+              "Id": 97,
+              "StartLine": 5,
+              "EndLine": 5,
+              "StartColumn": 9,
+              "EndColumn": 58,
+              "Class": "XOProject.TradeRepository",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.TradeRepository::.ctor(XOProject.ExchangeContext)",
+              "Instruction": "IL_0000: ldarg "
+            },
+            {
+              "Id": 98,
+              "StartLine": 7,
+              "EndLine": 7,
+              "StartColumn": 13,
+              "EndColumn": 36,
+              "Class": "XOProject.TradeRepository",
+              "Method": ".ctor",
+              "MethodFullName": "System.Void XOProject.TradeRepository::.ctor(XOProject.ExchangeContext)",
+              "Instruction": "IL_0008: ldarg "
+            }
+          ]
+        }
+      },
+      "Locations": [
+        {
+          "File": "D:\\SourceCode\\CrossExchange\\CrossExchange\\XOProject.Tests\\bin\\Debug\\netcoreapp2.0\\XO-Project.dll",
+          "BackupFile": "D:\\SourceCode\\CrossExchange\\CrossExchange\\XOProject.Tests\\bin\\Debug\\netcoreapp2.0\\XO-Project.uninstrumented.dll",
+          "PdbFile": "D:\\SourceCode\\CrossExchange\\CrossExchange\\XOProject.Tests\\bin\\Debug\\netcoreapp2.0\\XO-Project.pdb",
+          "BackupPdbFile": "D:\\SourceCode\\CrossExchange\\CrossExchange\\XOProject.Tests\\bin\\Debug\\netcoreapp2.0\\XO-Project.uninstrumented.pdb"
+        }
+      ]
+    }
+  ]
+}
\ No newline at end of file
diff --git a/modify.patch b/modify.patch
new file mode 100644
index 0000000..e69de29
-- 
2.17.1.windows.2


From 80b2747e230b90f985fa463d13fa3a9ff331e98f Mon Sep 17 00:00:00 2001
From: mattcoder2017 <myang@arris.com>
Date: Wed, 10 Oct 2018 21:49:06 +0800
Subject: [PATCH 3/3] Added corrections to code smells
XOV:v4Added code quality tasks

---
 XOProject/Controller/PortfolioController.cs | 6 +++++-
 XOProject/Controller/ShareController.cs     | 9 +++++++--
 XOProject/Controller/TradeController.cs     | 4 ++++
 3 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/XOProject/Controller/PortfolioController.cs b/XOProject/Controller/PortfolioController.cs
index 7e5a8ae..265af35 100644
--- a/XOProject/Controller/PortfolioController.cs
+++ b/XOProject/Controller/PortfolioController.cs
@@ -18,7 +18,11 @@ namespace XOProject.Controller
         public async Task<IActionResult> GetPortfolioInfo([FromRoute]int portFolioid)
         {
             var portfolio = _portfolioRepository.GetAll().Where(x => x.Id.Equals(portFolioid));
-            
+
+            // Code smell, Lack indication if fetching non-existed record
+            if (portfolio.Count<Portfolio>() == 0)
+                return NotFound();
+
             return Ok(portfolio);
         }
 
diff --git a/XOProject/Controller/ShareController.cs b/XOProject/Controller/ShareController.cs
index 28bb448..64eb21b 100644
--- a/XOProject/Controller/ShareController.cs
+++ b/XOProject/Controller/ShareController.cs
@@ -31,12 +31,17 @@ namespace XOProject.Controller
         public async Task<IActionResult> Get([FromRoute]string symbol)
         {
             var shares = _shareRepository.Query().Where(x => x.Symbol.Equals(symbol)).ToList();
-            if (shares.Count >= 0)
+            if (shares.Count > 0)
             {
                 return Ok(shares);
             }
             else
-                return BadRequest();
+                //Code smell, According the HTTP RFC, http://www.ietf.org/rfc/rfc2616.txt, a 400 Bad Request means:
+                //The request could not be understood by the server due to malformed syntax.
+                //Which is not appropriate in this context
+
+                //return BadRequest();
+                return NotFound();
         }
 
 
diff --git a/XOProject/Controller/TradeController.cs b/XOProject/Controller/TradeController.cs
index 6f14bc7..092274d 100644
--- a/XOProject/Controller/TradeController.cs
+++ b/XOProject/Controller/TradeController.cs
@@ -27,6 +27,10 @@ namespace XOProject.Controller
         public async Task<IActionResult> GetAllTradings([FromRoute]int portFolioid)
         {
             var trade = _tradeRepository.Query().Where(x => x.PortfolioId.Equals(portFolioid));
+            // Code smell - lacking indication for non-existed trades
+            if (trade.Count<Trade>() == 0)
+               return NotFound();
+
             return Ok(trade);
         }
 
-- 
2.17.1.windows.2

